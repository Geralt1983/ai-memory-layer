"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/CerebroChat.tsx":
/*!************************************!*\
  !*** ./components/CerebroChat.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CerebroChat; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=Loader2,Menu,Shield,Zap!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/zap.js\");\n/* harmony import */ var _barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Loader2,Menu,Shield,Zap!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/shield.js\");\n/* harmony import */ var _barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Loader2,Menu,Shield,Zap!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/menu.js\");\n/* harmony import */ var _barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Loader2,Menu,Shield,Zap!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-2.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction CerebroChat() {\n    _s();\n    const getWelcomeMessage = ()=>({\n            id: Date.now().toString(),\n            content: \"\\uD83E\\uDDB8‍♂️ <strong>WELCOME TO THE X-MEN, MUTANT!</strong>\\n\\nI am Cerebro, the advanced AI system designed to assist the X-Men in their missions. I can help you with:\\n\\n• Mission planning and strategy\\n• Mutant power analysis\\n• Threat assessment\\n• Team coordination\\n• And much more!\\n\\nWhat mission shall we tackle today?\",\n            type: \"ai\",\n            timestamp: \"Just now\"\n        });\n    const generateChatTitle = (messages)=>{\n        // Look for key topics in the conversation\n        const userMessages = messages.filter((m)=>m.type === \"user\");\n        const allContent = userMessages.map((m)=>m.content.toLowerCase()).join(\" \");\n        // Define topic keywords and their mission titles\n        const topicMap = {\n            // X-Men specific\n            \"sentinel\": \"SENTINEL THREAT\",\n            \"brotherhood\": \"BROTHERHOOD ALERT\",\n            \"magneto\": \"MAGNETO ENCOUNTER\",\n            \"phoenix\": \"PHOENIX FORCE\",\n            \"apocalypse\": \"APOCALYPSE RISING\",\n            \"wolverine\": \"WOLVERINE OPS\",\n            \"storm\": \"STORM WATCH\",\n            \"cyclops\": \"CYCLOPS TACTICAL\",\n            \"cerebro\": \"CEREBRO ANALYSIS\",\n            \"mutant\": \"MUTANT DETECTION\",\n            \"danger room\": \"DANGER ROOM TRAINING\",\n            \"xavier\": \"XAVIER PROTOCOL\",\n            \"mystique\": \"MYSTIQUE INFILTRATION\",\n            \"sabretooth\": \"SABRETOOTH HUNT\",\n            \"juggernaut\": \"JUGGERNAUT ALERT\",\n            // General topics\n            \"memory\": \"MEMORY ANALYSIS\",\n            \"ai\": \"AI SYSTEMS\",\n            \"data\": \"DATA PROCESSING\",\n            \"help\": \"ASSISTANCE REQUEST\",\n            \"test\": \"SYSTEM TESTING\",\n            \"hello\": \"INITIAL CONTACT\",\n            \"error\": \"ERROR ANALYSIS\",\n            \"debug\": \"DEBUG PROTOCOL\",\n            \"api\": \"API OPERATIONS\",\n            \"chat\": \"COMMUNICATION LOG\",\n            \"code\": \"CODE ANALYSIS\",\n            \"python\": \"PYTHON DEVELOPMENT\",\n            \"javascript\": \"JS OPERATIONS\",\n            \"database\": \"DATABASE OPS\",\n            \"search\": \"SEARCH MISSION\"\n        };\n        // Check for keywords\n        for (const [keyword, title] of Object.entries(topicMap)){\n            if (allContent.includes(keyword)) {\n                return \"MISSION: \".concat(title);\n            }\n        }\n        // If no specific keywords, generate based on conversation flow\n        if (userMessages.length > 0) {\n            const content = userMessages[0].content;\n            const words = content.split(\" \");\n            // Try to create a more meaningful title\n            if (words.length <= 4) {\n                return \"MISSION: \".concat(content.toUpperCase());\n            } else {\n                // Take first 4 words for better display\n                const shortTitle = words.slice(0, 4).join(\" \").toUpperCase();\n                return \"MISSION: \".concat(shortTitle, \"...\");\n            }\n        }\n        return \"MISSION: CLASSIFIED\";\n    };\n    // Load chat history from localStorage\n    const loadChatHistory = ()=>{\n        if (true) {\n            const saved = localStorage.getItem(\"cerebro_chat_history\");\n            return saved ? JSON.parse(saved) : [];\n        }\n        return [];\n    };\n    // Save chat history to localStorage\n    const saveChatHistory = (history)=>{\n        if (true) {\n            localStorage.setItem(\"cerebro_chat_history\", JSON.stringify(history));\n        }\n    };\n    // Load current chat from localStorage\n    const loadCurrentChat = ()=>{\n        if (true) {\n            const savedChatId = localStorage.getItem(\"cerebro_current_chat_id\");\n            const savedMessages = localStorage.getItem(\"cerebro_current_messages\");\n            if (savedChatId && savedMessages) {\n                return {\n                    id: savedChatId,\n                    messages: JSON.parse(savedMessages)\n                };\n            }\n        }\n        const newChatId = \"chat-\" + Date.now();\n        return {\n            id: newChatId,\n            messages: [\n                getWelcomeMessage()\n            ]\n        };\n    };\n    const initialChat = loadCurrentChat();\n    const [currentChatId, setCurrentChatId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialChat.id);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialChat.messages);\n    const [chatHistory, setChatHistory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(loadChatHistory());\n    const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isTyping, setIsTyping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [sidebarOpen, setSidebarOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedCharacter, setSelectedCharacter] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"professor-x\");\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const scrollToBottom = ()=>{\n        var _messagesEndRef_current;\n        (_messagesEndRef_current = messagesEndRef.current) === null || _messagesEndRef_current === void 0 ? void 0 : _messagesEndRef_current.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        scrollToBottom();\n    }, [\n        messages\n    ]);\n    // Save current chat to localStorage whenever messages change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) {\n            localStorage.setItem(\"cerebro_current_chat_id\", currentChatId);\n            localStorage.setItem(\"cerebro_current_messages\", JSON.stringify(messages));\n        }\n    }, [\n        currentChatId,\n        messages\n    ]);\n    // Save chat history to localStorage whenever it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        saveChatHistory(chatHistory);\n    }, [\n        chatHistory\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (inputRef.current) {\n            inputRef.current.style.height = \"auto\";\n            inputRef.current.style.height = Math.min(inputRef.current.scrollHeight, 120) + \"px\";\n        }\n    }, [\n        inputValue\n    ]);\n    const handleSendMessage = async ()=>{\n        if (!inputValue.trim() || isTyping) return;\n        // Check if this is the first user message BEFORE adding it\n        const isFirstUserMessage = messages.filter((m)=>m.type === \"user\").length === 0;\n        const newMessage = {\n            id: Date.now().toString(),\n            content: inputValue.trim(),\n            type: \"user\",\n            timestamp: new Date().toLocaleTimeString(\"en-US\", {\n                hour12: false,\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n            })\n        };\n        setMessages((prev)=>[\n                ...prev,\n                newMessage\n            ]);\n        const userInput = inputValue.trim();\n        setInputValue(\"\");\n        setIsTyping(true);\n        if (isFirstUserMessage) {\n            const newTitle = generateChatTitle([\n                ...messages,\n                newMessage\n            ]);\n            // Update chat history to show the new title immediately\n            setChatHistory((prev)=>{\n                const existingIndex = prev.findIndex((c)=>c.id === currentChatId);\n                const updatedChat = {\n                    id: currentChatId,\n                    title: newTitle,\n                    timestamp: newMessage.timestamp,\n                    messages: [\n                        ...messages,\n                        newMessage\n                    ]\n                };\n                if (existingIndex >= 0) {\n                    const updated = [\n                        ...prev\n                    ];\n                    updated[existingIndex] = updatedChat;\n                    return updated;\n                } else {\n                    return [\n                        updatedChat,\n                        ...prev\n                    ];\n                }\n            });\n        }\n        try {\n            // Call AI Memory Layer API\n            const response = await fetch(\"http://localhost:8000/chat\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    message: userInput,\n                    thread_id: currentChatId,\n                    include_recent: 5,\n                    include_relevant: 5,\n                    remember_response: true\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to get response from AI\");\n            }\n            const data = await response.json();\n            // Format response with Cerebro styling\n            let formattedResponse = data.response;\n            // Add Cerebro mission briefing style if it's a plain response\n            if (!formattedResponse.includes(\"<strong>\")) {\n                formattedResponse = \"\\uD83E\\uDDB8‍♂️ <strong>CEREBRO ANALYSIS COMPLETE</strong>\\n\\n\".concat(formattedResponse);\n            }\n            const aiResponse = {\n                id: (Date.now() + 1).toString(),\n                content: formattedResponse,\n                type: \"ai\",\n                timestamp: new Date().toLocaleTimeString(\"en-US\", {\n                    hour12: false,\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                })\n            };\n            setMessages((prev)=>[\n                    ...prev,\n                    aiResponse\n                ]);\n            // Update chat history with the complete conversation\n            if (isFirstUserMessage) {\n                setChatHistory((prev)=>{\n                    const existingIndex = prev.findIndex((c)=>c.id === currentChatId);\n                    const updatedChat = {\n                        id: currentChatId,\n                        title: generateChatTitle([\n                            ...messages,\n                            newMessage\n                        ]),\n                        timestamp: aiResponse.timestamp,\n                        messages: [\n                            ...messages,\n                            newMessage,\n                            aiResponse\n                        ]\n                    };\n                    if (existingIndex >= 0) {\n                        const updated = [\n                            ...prev\n                        ];\n                        updated[existingIndex] = updatedChat;\n                        return updated;\n                    } else {\n                        return [\n                            updatedChat,\n                            ...prev\n                        ];\n                    }\n                });\n            }\n        } catch (error) {\n            console.error(\"Error calling AI Memory Layer API:\", error);\n            // Fallback response\n            const errorResponse = {\n                id: (Date.now() + 1).toString(),\n                content: \"⚠️ <strong>CEREBRO CONNECTION INTERRUPTED</strong>\\n\\nUnable to establish connection with the main AI Memory Layer. Please check that the API is running on localhost:8000 and try again.\",\n                type: \"ai\",\n                timestamp: new Date().toLocaleTimeString(\"en-US\", {\n                    hour12: false,\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                })\n            };\n            setMessages((prev)=>[\n                    ...prev,\n                    errorResponse\n                ]);\n            // Update chat history with error response if it's the first message\n            if (isFirstUserMessage) {\n                setChatHistory((prev)=>{\n                    const existingIndex = prev.findIndex((c)=>c.id === currentChatId);\n                    const updatedChat = {\n                        id: currentChatId,\n                        title: generateChatTitle([\n                            ...messages,\n                            newMessage\n                        ]),\n                        timestamp: errorResponse.timestamp,\n                        messages: [\n                            ...messages,\n                            newMessage,\n                            errorResponse\n                        ]\n                    };\n                    if (existingIndex >= 0) {\n                        const updated = [\n                            ...prev\n                        ];\n                        updated[existingIndex] = updatedChat;\n                        return updated;\n                    } else {\n                        return [\n                            updatedChat,\n                            ...prev\n                        ];\n                    }\n                });\n            }\n        } finally{\n            setIsTyping(false);\n        }\n    };\n    const handleKeyDown = (e)=>{\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage();\n        }\n    };\n    const createNewChat = ()=>{\n        // Save current chat to history if it has messages beyond the welcome message\n        if (messages.length > 1) {\n            const title = generateChatTitle(messages);\n            const newChatEntry = {\n                id: currentChatId,\n                title,\n                timestamp: new Date().toLocaleTimeString(\"en-US\", {\n                    hour12: false,\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                }),\n                messages: [\n                    ...messages\n                ]\n            };\n            setChatHistory((prev)=>[\n                    newChatEntry,\n                    ...prev\n                ]);\n        }\n        // Create new chat\n        const newChatId = \"chat-\" + Date.now();\n        setCurrentChatId(newChatId);\n        setMessages([\n            getWelcomeMessage()\n        ]);\n        setSidebarOpen(false);\n    };\n    const loadChat = (chat)=>{\n        // Save current chat first if needed\n        if (messages.length > 1 && currentChatId !== chat.id) {\n            const title = generateChatTitle(messages);\n            const currentChat = {\n                id: currentChatId,\n                title,\n                timestamp: new Date().toLocaleTimeString(\"en-US\", {\n                    hour12: false,\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                }),\n                messages: [\n                    ...messages\n                ]\n            };\n            // Update or add current chat to history\n            setChatHistory((prev)=>{\n                const existingIndex = prev.findIndex((c)=>c.id === currentChatId);\n                if (existingIndex >= 0) {\n                    const updated = [\n                        ...prev\n                    ];\n                    updated[existingIndex] = currentChat;\n                    return updated;\n                }\n                return [\n                    currentChat,\n                    ...prev\n                ];\n            });\n        }\n        // Load selected chat\n        setCurrentChatId(chat.id);\n        setMessages(chat.messages);\n        setSidebarOpen(false);\n    };\n    const toggleTheme = ()=>{\n        // Add apocalyptic effect\n        document.body.style.filter = \"hue-rotate(180deg) saturate(1.5) brightness(0.8)\";\n        setTimeout(()=>{\n            document.body.style.filter = \"none\";\n        }, 1000);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex h-screen backdrop-blur-sm\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"aside\", {\n                className: \"cerebro-panel flex flex-col overflow-hidden w-80 flex-shrink-0 \".concat(sidebarOpen ? \"fixed left-0 top-0 h-screen z-50 md:relative\" : \"hidden md:flex\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"sidebar-header flex-shrink-0\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-3\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"x-logo\",\n                                        children: \"X\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 395,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                        className: \"header-title\",\n                                        children: \"CEREBRO\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 396,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                lineNumber: 394,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"status-indicator\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"status-dot\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 399,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"MUTANT DETECTED\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 400,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                lineNumber: 398,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                        lineNumber: 393,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-1 overflow-y-auto\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"btn btn-primary w-full mb-6\",\n                                    onClick: createNewChat,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                            className: \"w-4 h-4 mr-2\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 411,\n                                            columnNumber: 15\n                                        }, this),\n                                        \"NEW MISSION\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                    lineNumber: 407,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"mb-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-sm text-muted mb-2\",\n                                            style: {\n                                                fontFamily: \"var(--font-apocalypse)\"\n                                            },\n                                            children: \"MUTANT POWER LEVEL\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 416,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"power-meter\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"power-fill\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 420,\n                                                columnNumber: 17\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 419,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                    lineNumber: 415,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"space-y-3\",\n                                    style: {\n                                        fontFamily: \"var(--font-apocalypse)\"\n                                    },\n                                    children: chatHistory.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-center text-muted text-sm py-4\",\n                                        children: \"No previous missions\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 426,\n                                        columnNumber: 17\n                                    }, this) : chatHistory.map((chat)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"p-3 rounded-lg cursor-pointer border-2 transition-colors \".concat(currentChatId === chat.id ? \"border-accent bg-tertiary\" : \"border-x-men-gold hover:border-accent\"),\n                                            style: {\n                                                fontFamily: \"var(--font-apocalypse)\"\n                                            },\n                                            onClick: ()=>loadChat(chat),\n                                            title: chat.title,\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"font-bold text-sm text-x-men-gold leading-tight break-words overflow-hidden\",\n                                                    style: {\n                                                        display: \"-webkit-box\",\n                                                        WebkitLineClamp: 2,\n                                                        WebkitBoxOrient: \"vertical\"\n                                                    },\n                                                    children: chat.title\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                    lineNumber: 442,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-xs text-muted mt-1\",\n                                                    children: chat.timestamp\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                    lineNumber: 450,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, chat.id, true, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 431,\n                                            columnNumber: 19\n                                        }, this))\n                                }, void 0, false, {\n                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                    lineNumber: 424,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                            lineNumber: 406,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                        lineNumber: 405,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-shrink-0 p-6 border-t border-x-men-gold\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"btn w-full justify-start\",\n                            onClick: toggleTheme,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                    className: \"w-4 h-4 mr-2\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                    lineNumber: 464,\n                                    columnNumber: 13\n                                }, this),\n                                \"TOGGLE POWERS\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                            lineNumber: 460,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                        lineNumber: 459,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                lineNumber: 391,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"flex flex-col flex-1 min-w-0\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                        className: \"header\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"btn p-2 md:hidden\",\n                                        onClick: ()=>setSidebarOpen(!sidebarOpen),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                            className: \"w-5 h-5\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 479,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 475,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"header-title\",\n                                        children: \"X-MEN MISSION CONTROL\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 481,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                lineNumber: 474,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                        className: \"bg-tertiary border-2 border-x-men-gold rounded-lg px-3 py-2 text-sm\",\n                                        style: {\n                                            fontFamily: \"var(--font-apocalypse)\"\n                                        },\n                                        value: selectedCharacter,\n                                        onChange: (e)=>setSelectedCharacter(e.target.value),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: \"professor-x\",\n                                                children: \"PROFESSOR X\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 491,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: \"cyclops\",\n                                                children: \"CYCLOPS\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 492,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: \"wolverine\",\n                                                children: \"WOLVERINE\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 493,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: \"storm\",\n                                                children: \"STORM\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 494,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 485,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"status-indicator\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"status-dot\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 497,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"MISSION ACTIVE\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 498,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 496,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                lineNumber: 484,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                        lineNumber: 473,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-1 overflow-y-auto p-6\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"max-w-4xl mx-auto space-y-6\",\n                            children: [\n                                messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"message \".concat(message.type === \"user\" ? \"message-user\" : \"message-ai cerebro-panel\"),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"message-content\",\n                                                dangerouslySetInnerHTML: {\n                                                    __html: message.content\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 511,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"message-timestamp\",\n                                                children: [\n                                                    \"[\",\n                                                    message.type === \"user\" ? \"MUTANT\" : \"CEREBRO\",\n                                                    \"] \",\n                                                    message.timestamp\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 515,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, message.id, true, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 507,\n                                        columnNumber: 15\n                                    }, this)),\n                                isTyping && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"message message-ai cerebro-panel\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"message-content\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"typing-indicator\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"typing-dot\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                    lineNumber: 526,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"typing-dot\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                    lineNumber: 527,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"typing-dot\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                    lineNumber: 528,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        marginLeft: \"12px\",\n                                                        color: \"var(--x-men-gold)\"\n                                                    },\n                                                    children: \"ANALYZING...\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                    lineNumber: 529,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 525,\n                                            columnNumber: 19\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                        lineNumber: 524,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                    lineNumber: 523,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    ref: messagesEndRef\n                                }, void 0, false, {\n                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                    lineNumber: 535,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                            lineNumber: 505,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                        lineNumber: 504,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"input-container\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"max-w-4xl mx-auto\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex gap-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                            ref: inputRef,\n                                            value: inputValue,\n                                            onChange: (e)=>setInputValue(e.target.value),\n                                            onKeyDown: handleKeyDown,\n                                            className: \"chat-input flex-1\",\n                                            placeholder: \"Enter your mission briefing...\",\n                                            rows: 2\n                                        }, void 0, false, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 543,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: \"btn btn-primary px-6\",\n                                            onClick: handleSendMessage,\n                                            disabled: isTyping,\n                                            children: isTyping ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                                className: \"w-5 h-5 animate-spin\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 558,\n                                                columnNumber: 19\n                                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Loader2_Menu_Shield_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                                className: \"w-5 h-5\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                                lineNumber: 560,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 552,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                    lineNumber: 542,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"mt-3 text-xs text-muted flex justify-between\",\n                                    style: {\n                                        fontFamily: \"var(--font-apocalypse)\"\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"Press ENTER to transmit | SHIFT+ENTER for new line\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 565,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"MUTANT STATUS: ACTIVE\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                            lineNumber: 566,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                                    lineNumber: 564,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                            lineNumber: 541,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                        lineNumber: 540,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                lineNumber: 471,\n                columnNumber: 7\n            }, this),\n            sidebarOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black bg-opacity-50 z-40 md:hidden\",\n                onClick: ()=>setSidebarOpen(false)\n            }, void 0, false, {\n                fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n                lineNumber: 574,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/jeremy/Projects/ai-memory-layer/chatgpt-clone-frontend/components/CerebroChat.tsx\",\n        lineNumber: 389,\n        columnNumber: 5\n    }, this);\n}\n_s(CerebroChat, \"dKsnQmWP3e2E9wtVyxrZHvNDWfc=\");\n_c = CerebroChat;\nvar _c;\n$RefreshReg$(_c, \"CerebroChat\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/CerebroChat.tsx\n"));

/***/ })

});